openapi: 3.0.0

info:
    version: '1.0'
    title: 'LBAW Infra Web API'
    description: 'Web Resources Specification (A7) for Infra'

servers:
    -   url : http://lbaw2192.lbaw.fe.up.pt
        description : Server


externalDocs:
    description: Find more info here
    url: https://git.fe.up.pt/lbaw/lbaw2122/lbaw2192/-/wikis/EAP

tags:
    -   name: 'M01: Authentication and User Profile'
    -   name: 'M02: Group'
    -   name: 'M03: User Content'
    -   name: 'M04: Notifications'
    -   name: 'M05: Administration and Static Pages'
    -   name: 'M06: Search'

paths:
  /:
    get:
      operationId: R100
      summary: 'R100: Landing page'
      description: 'Provide login or home page. Access: PUB'
      tags:
        - 'M01: Authentication and User Profile'
      responses:
        302:
          description: 'OK. Show page.'
  /login:
    get:
      operationId: R101
      summary: 'R102: Login Form'
      description: 'Provide login form. Access: PUB'
      tags:
        - 'M01: Authentication and User Profile'
      responses:
        200:
          description: 'OK. Show page.'
    patch:
      operationId: R102
      summary: 'R102: Post login information'
      description: 'Post login form. Access: PUB'
      tags:
        - 'M01: Authentication and User Profile'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                email:
                  type: string
                  minLength: 1
                password:
                  type: string
                  minLength: 1
              required:
                - email
                - password
      responses:
        '302':
          description: 'Redirect after processing login credentials'
          headers:
            Location:
              schema:
                type: string
              examples:
                302Success:
                  description: 'Succesful authentication. Redirecting to homepage'
                  value: '/home'
                302Error:
                  description: 'Failed auth. Redirecting to login page'
                  value: '/login'
  /logout:
    post:
      operationId: R103
      summary: 'R103: Logout'
      description: 'Logout the user. Access: USR, ADM'
      tags:
        - 'M01: Authentication and User Profile'
      responses:
        '302':
          description: 'Redirect after logout'
          headers:
            Location:
              schema:
                type: string
              examples:
                302Success:
                  description: 'Logout succesful. Redirect to welcome.'
                  value: '/login'
  /register:
    get:
      operationId: R104
      summary: 'R104: Register'
      description: 'Provide signup page. Access: PUB'
      tags:
        - 'M01: Authentication and User Profile'
      responses:
        '200':
          description: 'OK. Show register page'
    post:
      operationId: R105
      summary: 'R105: Register'
      description: 'Processes new user registration. Access: PUB'
      tags:
        - 'M01: Authentication and User Profile'
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                password:
                  type: string
                password_confirmation:
                  type: string
                birthdate:
                  type: string
                profile_pic:
                  type: string
                  default: default_profile
                cover_pic:
                  type: string
                  default: default_cover
                priv_stat:
                  type: string
                  enum: [Public, Private]
              required:
                - name
                - email
                - password
                - password_confirmation
                - birthdate
                - priv_stat
                - profile_pic
                - cover_pic
      responses:
        '302':
          description: 'Redirect after processing new user'
          headers:
            Location:
              schema:
                type: string
              examples:
                302Success:
                  description: 'Succesful registration. Redirect to homepage.'
                  value: '/home'
                302Failure:
                  description: 'Failed registration. Redirect to register.'
                  value: '/register'
  /register/groups:
    get:
      operationId: R106
      summary: 'R106: Groups Registration Page'
      description: 'Provide groups enrollment page for interests. Access: USR'
      tags:
        - 'M01: Authentication and User Profile'
      responses:
        '200':
          description: 'OK.'
    post:
      operationId: R107
      summary: 'R107: Post Groups to join'
      description: 'R107: Post groups to join'
      tags:
        - 'M01: Authentication and User Profile'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: array
              items:
                type: integer
                description: 'Group ID'
      responses:
        '200':
          description: 'OK.'
  /users/{id}:
    get:
      operationId: R108
      summary: 'R107: View user profile.'
      description: 'Show a user''s profile. Access: USR'
      tags:
        - 'M01: Authentication and User Profile'
      parameters:
        - in: path
          name: id
          description: User's ID
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: 'OK. Show user profile.'
  /profile:
    get:
      operationId: R109
      summary: 'R108: User''s own profile page'
      description: 'Provide own profile page. Access: USR'
      tags:
        - 'M01: Authentication and User Profile'
      responses:
        '302':
          description: 'Redirect to current user page'
  /profile/edit:
    get:
      operationId: R110
      summary: 'R109: Edit Profile'
      description: 'Show edit profile page. Access: OWN'
      tags:
        - 'M01: Authentication and User Profile'
      responses:
        '200':
          description: 'OK. Show edit page.'
    patch:
      operationId: R111
      summary: 'R110: Edit User Profile Action'
      description: 'Process the edition of user information. Access: OWN.'
      tags:
        - 'M01: Authentication and User Profile'
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                birthdate:
                  type: string
                profile_pic:
                  type: string
                cover_pic:
                  type: string
                priv_stat:
                  type: string
                  enum: [Public, Private]
      responses:
        '302':
          description: 'Redirect to edit profile page'
          headers:
            Location:
              schema:
                type: string
              examples:
                302Success:
                  description: 'Success. Redirect to edit profile.'
                  value: '/profile/edit'
                302Error:
                  description: 'Failed. Redirect to edit form'
                  value: '/profile/edit'
  /profile/edit/delete:
    get:
      operationId: R112
      summary: 'R111: Delete Account'
      description: 'Show deletion page. Access: OWN'
      tags:
        - 'M01: Authentication and User Profile'
      responses:
        '200':
          description: 'OK. Sow deletion page.'
    post:
      operationId: R113
      summary: 'R112: Delete Account Action'
      description: 'Process account deletion. Access: OWN'
      tags:
        - 'M01: Authentication and User Profile'
      responses:
        '302':
          description: 'Redirect after deletion.'
          headers:
            Location:
              schema:
                type: string
              examples:
                302Success:
                  description: 'Success. Go to welcome'
                  value: '/login'
                302Failure:
                  description: 'Failed. Redirect to edit.'
                  value: '/profile/edit'
  /profile/groups:
    get:
      operationId: R114
      summary: 'R112: Get users groups.'
      description: 'Get a user''s groups.'
      tags:
        - 'M01: Authentication and User Profile'
      parameters:
        - in : query
          name: uid
          schema:
            type: integer
          description: User ID
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Membership'
  /profile/friends:
    get:
      operationId: R115
      summary: 'R113: Get user''s friends.'
      description: 'Get user''s friends.'
      tags:
        - 'M01: Authentication and User Profile'
      parameters:
        - in : query
          name: uid
          schema:
            type: integer
          description: User ID
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Friendship'
  /home:
    get:
      operationId: R116
      summary: 'R114: Home'
      description: 'Show a User''s timeline or the public one. Access: USR PUB'
      tags:
        - 'M01: Authentication and User Profile'
      responses:
        '200':
          description: 'OK. Show page.'
  /profile/friend_requests:
    get:
      operationId: R117
      summary: 'R115: Friend Requests'
      description: 'Show User''s friend requests'
      tags:
        - 'M01: Authentication and User Profile'
      responses:
        '200':
          description: 'OK. Show page.'
  /profile/group_requests:
    get:
      operationId: R118
      summary: 'R116: Friend Requests'
      description: 'Show User''s group requests'
      tags:
        - 'M01: Authentication and User Profile'
      responses:
        '200':
          description: 'OK. Show page.'
  /groups/create:
    get:
      operationId: R201
      summary: 'R201: Create Group'
      description: 'Show group creation page. Access: USR'
      tags:
      - 'M02: Group'
      responses:
        '200':
          description: 'OK. Show group creation page'
  /groups:
    post:
      operationId: R202
      summary: 'R202: Create Group'
      description: 'Process group creation. Access: USR'
      tags:
      - 'M02: Group'
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                cover_pic:
                  type: string
                priv_stat:
                  type: string
                  enum: [Public, Private]
              required:
              - name
              - cover_pic
              - priv_stat
      responses:
        '302':
          description: 'Redirect after creating new group.'
          headers:
            Location:
              schema:
                type: string
              examples:
                302Success:
                  description: 'Successful group creation. Redirect to created group.'
                  value: '/group/{id}'
                302Error:
                  description: 'Failed group creation. Redirect to group creation page.'
                  value: '/group/create'
  /groups/{id}:
    get:
      operationId: R203
      summary: 'R203: View Group'
      description: 'Show group page. Access: USR'
      tags:
        - 'M02: Group'
      parameters:
        - in: path
          name: id
          description: 'Group ID'
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: 'OK. Show group page.'
  /groups/{id}/info:
      get:
        operationId: R204
        summary: 'R204: View group information page'
        description: 'Show group information page. Access: USR'
        tags:
          - 'M02: Group'
        parameters:
          - in: path
            name: id
            description: 'Group ID'
            schema:
              type: integer
            required: true
        responses:
          '200':
            description: 'Ok. Show group information page.'
  /groups/{id}/edit:
    parameters:
        - in: path
          name: id
          description: 'Group ID'
          schema:
            type: integer
          required: true
    get:
      operationId: R205
      summary: 'R205: Edit group information'
      description: 'Edit group description. Access: MOD'
      tags:
        - 'M02: Group'
      responses:
        '200':
          description: 'Ok. Show group edit information page.'
    patch:
      operationId: R206
      summary: 'R206: Process edit group information'
      description: 'Process edit group information. Access: MOD'
      tags:
        - 'M02: Group'
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                cover_pic:
                  type: string
                priv_status:
                  type: string
                  enum: [Public, Private]
      responses:
        '302':
          description: 'Redirect to edit group information page.'
          headers:
            Location:
              schema:
                type: string
              examples:
                302Success:
                  description: 'Successful group edit Redirect to edit information page.'
                  value: '/group/{id}/edit'
                302Error:
                  description: 'Failed group edit. Redirect to edit information page.'
                  value: '/group/{id}/edit'
    delete:
      operationId: R207
      summary: 'R207: Delete group'
      description: 'Delete group. Access: MOD ADM'
      tags:
        - 'M02: Group'
      responses:
        '302':
          description: 'Redirect after deleting group.'
          headers:
            Location:
              schema:
                type: string
              examples:
                302Success:
                  description: 'Successful group deletion. Redirect to timeline.'
                  value: '/timeline'
                302Error:
                  description: 'Failed group deletion. Redirect to information page.'
                  value: '/group/{id}/edit'
  /groups/{id}/members:
    get:
      operationId: R208
      summary: 'R208: Get group members.'
      description: 'Get group members. Access USR'
      tags:
        - 'M02: Group'
      parameters:
        - in: path
          name: id
          description: 'Group ID'
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: 'Ok. show memberships.'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Membership'
  /groups/{id}/members/{user_id}:
    parameters:
        - in: path
          name: id
          description: 'Group ID'
          schema:
            type: integer
          required: true
        - in: path
          name: user_id
          description: 'User ID'
          schema:
            type: integer
          required: true
    get:
      operationId: R209
      summary: 'R209: View group member and role.'
      description: 'View group member and role. Access: USR'
      tags:
        - 'M02: Group'
      responses:
        '200':
          description: 'Ok. Show group member and role.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Membership'
    patch:
      operationId: R210
      summary: 'R210: Change group member role.'
      description: 'Change group member role. Access: MOD'
      tags:
        - 'M02: Group'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                moderator:
                  type: boolean
              required:
                  - moderator
      responses:
        '302':
          description: 'Redirect after changing group member role.'
          headers:
            Location:
              schema:
                type: string
              examples:
                302Success:
                  description: 'Successful role change. Redirect to group member viewing page.'
                  value: '/group/{id}/members/{user_id}'
                302Error:
                  description: 'Failed role change. Redirect to group member viewing page.'
                  value: '/group/{id}/members/{user_id}'
    delete:
      operationId: 'R211'
      summary: 'R211: Delete group member.'
      description: 'Delete group member. Access: MOD'
      tags:
        - 'M02: Group'
      responses:
        '302':
          description: 'Redirect after deleting group member.'
          headers:
            Location:
              schema:
                type: string
              examples:
                302Success:
                  description: 'Successful member deletion. Redirect to group members list.'
                  value: '/group/{id}/members'
                303failure:
                  description: 'Failed member deletion. Redirect to group member page.'
                  value: 'group/{id}/members/{user_id}'
  /groups/{id}/requests:
    parameters:
        - in : path
          name: id
          description: 'Group ID'
          schema:
            type: integer
          required: true
    get:
      operationId: R212
      summary: 'R212: Get group requests'
      description: 'R212: Get group requests. Access: MOD'
      tags:
        - 'M02: Group'
      responses:
        '200':
          description: 'Ok. Show groups requests.'
    put:
      operationId: R213
      summary: 'R213: Add group request'
      description: 'R213: Add group request. Access MOD'
      tags:
        - 'M02: Group'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#components/schemas/User'
      responses:
        '302':
          description: 'Redirect after adding group request.'
          headers:
            Location:
              schema:
                type: string
              examples:
                302Success:
                  description: 'Successful request added. Redirect to group requests page.'
                  value: '/group/{id}/requests'
                302Error:
                  description: 'Failed request added. Redirect to group requests page.'
                  value: '/group/{id}/requests'
  /groups/{id}/requests/{user_id}:
    parameters:
        - in: path
          name: id
          description: 'Group ID'
          schema:
            type: integer
          required: true
        - in: path
          name: user_id
          description: 'User ID to which request is to or from'
          schema:
            type: integer
          required: true
    get:
      operationId: R214
      summary: 'R214: View group request.'
      description: 'View group request. Access USR'
      tags:
        - 'M02: Group'
      responses:
        '200':
          description: 'Ok. Show group request.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupRequest'
    patch:
      operationId: R215
      summary: 'R215: Accept or Decline group request.'
      description: 'Accept or Decline group request. Access: MOD'
      tags:
        - 'M02: Group'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  enum: [Accepted, Declined]
              required:
                  - status
      responses:
        '302':
          description: 'Redirect after accepting or declining group request.'
          headers:
            Location:
              schema:
                type: string
              examples:
                302Success:
                  description: 'Successful operation. Redirect to overall group requests page.'
                  value: '/group/{id}/requests'
                302Error:
                  description: 'Failed request added. Redirect to specific group request page.'
                  value: '/group/{id}/requests/{user_id}'
  /user_content/{id}:
    get:
      operationId: R301
      summary: 'R301: View User Content Page'
      description: 'Show user content page. Access: USR'
      tags:
        - 'M03: User Content'
      parameters:
        - in: path
          name: id
          description: User content ID
          schema:
            type: integer
          required: true
      responses:
        '302':
          description: 'OK'
  /posts/{id}:
    get:
      operationId: R302
      summary: 'R302: View Post Page'
      description: 'Show post page. Access: USR'
      tags:
        - 'M03: User Content'
      parameters:
        - in: path
          name: id
          description: Post ID
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: 'OK'
  /comments/{id}:
    get:
      operationId: R303
      summary: 'R303: View Comment Page'
      description: 'Show comment page. Access: USR'
      tags:
        - 'M03: User Content'
      parameters:
        - in: path
          name: id
          description: Comment ID
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: 'OK'
  /shares/{id}:
    get:
      operationId: R304
      summary: 'R304: View shares Page'
      description: 'Show shares page. Access: USR'
      tags:
        - 'M03: User Content'
      parameters:
        - in: path
          name: id
          description: Share ID
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: 'OK'
  /posts/create:
    get:
      operationId: R305
      summary: 'R305: View Post Creation Page'
      description: 'Access: USR'
      tags:
        - 'M03: User Content'
      responses:
        '200':
          description: 'OK'
  /posts:
    post:
      operationId: R306
      summary: 'R306: Create Post'
      description: 'Access: USR'
      tags:
        - 'M03: User Content'
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                text:
                  type: string
                group:
                  type: integer
                images:
                  type: array
                tags:
                  type: array
                priv_stat:
                  type: string
                  enum: [ Public, Private ]
              required:
                - text
                - priv_stat
      responses:
        '302':
          description: 'OK'
  /comments:
    post:
      operationId: R307
      summary: 'R307: Create Comment'
      description: 'Access: USR'
      tags:
        - 'M03: User Content'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                text:
                  type: string
                tags:
                  type: array
                priv_stat:
                  type: string
                  enum: [ Public, Private ]
              required:
                - text
                - priv_stat
      responses:
        '302':
          description: 'OK'
  /shares:
    post:
      operationId: R308
      summary: 'R308: Create Post'
      description: 'Show post page. Access: USR'
      tags:
        - 'M03: User Content'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                text:
                  type: string
                group:
                  type: integer
                images:
                  type: array
                tags:
                  type: array
                priv_stat:
                  type: string
                  enum: [ Public, Private ]
              required:
                - text
                - priv_stat
      responses:
        '302':
          description: 'OK'
  /posts/{post}/share:
    get:
      operationId: R309
      summary: 'R309: View Share Creation Page'
      description: 'Access: USR'
      tags:
        - 'M03: User Content'
      responses:
        '200':
          description: 'OK'
  /api/likes:
    post:
      operationId: R310
      summary: 'R310: Create like'
      description: 'Access: USR'
      tags:
        - 'M03: User Content'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                user_id:
                  type: integer
                content_id:
                  type: integer
      responses:
        '200':
          description: 'OK'
    delete:
      operationId: R311
      summary: 'R311: Remove like'
      description: 'Access: USR'
      tags:
        - 'M03: User Content'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                user_id:
                  type: integer
                content_id:
                  type: integer
      responses:
        '200':
          description: 'OK'

  /api/user_content:
        get:
            operationId: R312
            summary: 'R312: Get All User Content'
            description: 'Get All User Content. Access: USR'
            tags:
                - 'M03: User Content'
            parameters:
                - in: query
                  name: group_id
                  description: 'Group ID'
                  schema:
                    type: integer
                - in: query
                  name: creator_id
                  description: 'Creator ID'
                  schema:
                    type: integer
                - in: query
                  name: text
                  description: 'Text Query'
                  schema:
                    type: string
                  required: false
            responses:
                '200':
                    description: Success
                    content:
                        application/json:
                            schema:
                              type: array
                              items:
                                $ref: '#/components/schemas/UserContent'
        put:
            operationId: R313
            summary: 'R303: Add new User Content'
            description: 'Add new User Content. Access: USR'
            tags:
                - 'M03: User Content'
            requestBody:
                required: true
                content:
                  application/json:
                      schema:
                        type: object
                        properties:
                            creator_id:
                              type: integer
                            text:
                              type: string
                            timestamp:
                              type: string
                            images:
                              type: array
                              items:
                                type: string
                        required:
                            - creator_id
                            - text
            responses:
                '201':
                    $ref: '#/components/responses/create'
                '403':
                    description: 'Access Forbidden'
  /api/user_content/{id}:
        get:
            operationId: R314
            summary: 'R304: Get User Content'
            description: 'Get User Content. Access: USR'
            tags:
                - 'M03: User Content'
            parameters:
                - in: path
                  name: id
                  description: User Content ID
                  schema:
                    type: integer
                  required: true
            responses:
                '200':
                    description: Success
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UserContent'
                '404':
                    description: Failure
        delete:
            operationId: R315
            summary: 'R305: Delete User Content'
            description: 'Delete User Content. Access: OWN MOD ADM'
            tags:
                - 'M03: User Content'
            parameters:
                - in: path
                  name: id
                  description: User Content ID
                  schema:
                    type: integer
                  required: true
            responses:
                '200':
                    $ref: '#/components/responses/delete'
                '404':
                    $ref: '#/components/responses/not_found'
        patch:
            operationId: R316
            summary: 'R306: Update User Content'
            description: 'Update User Content. Access: USR'
            tags:
                - 'M03: User Content'
            parameters:
                - in: path
                  name: id
                  description: User Content ID
                  schema:
                    type: integer
                  required: true
            requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                          creator_id:
                            type: integer
                          text:
                            type: string
                          timestamp:
                            type: string
                          images:
                            type: array
                          items:
                            type: string
                      required:
                          - creator_id
                          - text
            responses:
                '200':
                    $ref: '#/components/responses/update'
                '404':
                    $ref: '#/components/responses/not_found'
  /api/user_content/posts/{id}:
        get:
            operationId: R317
            summary: 'R307: Get User Content Post'
            description: 'Get User Content Post. Access: USR'
            tags:
                - 'M03: User Content'
            parameters:
                - in: path
                  name: id
                  description: Post ID
                  schema:
                    type: integer
                  required: true
            responses:
                '200':
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/UserContent'
                '404':
                    $ref: '#/components/responses/not_found'
        delete:
          operationId: R318
          summary: 'R308: Delete User Content Post'
          description: 'Delete User Content Post. Access: OWN MOD ADM'
          tags:
              - 'M03: User Content'
          parameters:
            - in: path
              name: id
              description: Post ID
              schema:
                type: integer
              required: true
          responses:
            '200':
              $ref: '#/components/responses/delete'
            '404':
              $ref: '#/components/responses/not_found'
        patch:
          operationId: R319
          summary: 'R309: Update User Content Post'
          description: 'Update User Content Post. Access: USR'
          tags:
            - 'M03: User Content'
          parameters:
            - in: path
              name: id
              description: Post ID
              schema:
                type: integer
              required: true
          requestBody:
            required: true
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    id:
                      type: integer
                    pic_1:
                      type: integer
                    pic_2:
                      type: integer
                    pic_3:
                      type: integer
                    pic_4:
                      type: integer
                    pic_5:
                      type: integer
                  required:
                    - id
          responses:
            '200':
              $ref: '#/components/responses/update'
            '404':
              $ref: '#/components/responses/not_found'
  /api/user_content/{id}/comments:
        get:
            operationId: R320
            summary: 'R310: Get User Content Comments'
            description: 'Get User Content Comments. Access: USR'
            tags:
                - 'M03: User Content'
            parameters:
                - in: path
                  name: id
                  description: Comment ID
                  schema:
                    type: integer
                  required: true
            responses:
                '200':
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/Comment'
                '404':
                    $ref: '#/components/responses/not_found'
        put:
          operationId: R321
          summary: 'R311: Add User Content Comment'
          description: 'Add User Content Comment. Access: USR'
          tags:
            - 'M03: User Content'
          parameters:
            - in: path
              name: id
              description: User Content ID
              schema:
                type: integer
              required: true
          requestBody:
            required: true
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    id:
                      type: integer
                  required:
                    - id
                  example:
                    id: 12
          responses:
            '201':
              $ref: '#/components/responses/create'
            '404':
              $ref: '#/components/responses/not_found'
  /api/user_content/{id}/comments/{id_comment}:
    get:
      operationId: R322
      summary: 'R312: Get User Content Comment'
      description: 'Get User Content Comment. Access: USR'
      tags:
        - 'M03: User Content'
      parameters:
        - in: path
          name: id
          description: User Content ID
          schema:
            type: integer
          required: true
        - in: path
          name: id_comment
          description: Comment ID
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
        '404':
          description: Failure
    delete:
      operationId: R323
      summary: 'R313: Delete User Content Comment'
      description: 'Delete User Content Comment. Access: OWN MOD ADM'
      tags:
        - 'M03: User Content'
      parameters:
        - in: path
          name: id
          description: User Content ID
          schema:
            type: integer
          required: true
        - in: path
          name: id_comment
          description: Comment ID
          schema:
            type: integer
          required: true
      responses:
        '200':
          $ref: '#/components/responses/delete'
        '404':
          $ref: '#/components/responses/not_found'
  /api/user_content/{id}/likes:
        get:
            operationId: R324
            summary: 'R314: Get User Content Likes'
            description: 'Get User Content Likes. Access: USR'
            tags:
                - 'M03: User Content'
            parameters:
                - in: path
                  name: id
                  description: User Content ID
                  schema:
                    type: integer
                  required: true
            responses:
                '200':
                    description: Success
                    content:
                        application/json:
                            schema:
                              type: array
                              items:
                                type: object
                                properties:
                                    user_id:
                                        $ref: '#/components/schemas/User'
                '404':
                    description: User Content Not Found.
        put:
          operationId: R325
          summary: 'R315: Add User Content Like'
          description: 'Add User Content Like. Access: USR'
          tags:
            - 'M03: User Content'
          parameters:
            - in: path
              name: id
              description: User Content ID
              schema:
                type: integer
              required: true
          requestBody:
            required: true
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    user_id:
                      type: integer
                  required:
                    - user_id
                  example:
                    id: 4
                    user_id: 7
          responses:
            '201':
              description: Success
              content:
                text/plain:
                  schema:
                    type: string
                  examples:
                    201Success:
                      description: Success adding user content like.
                      value: Success
                    201Failure:
                      description: Failure adding user content like.
                      value: Failure
            '404':
              description: User Content Not Found.
        delete:
          operationId: R316
          summary: 'R316: Delete User Content Like'
          description: 'Delete User Content Like. Access: OWN ADM'
          tags:
            - 'M03: User Content'
          parameters:
            - in: path
              name: id
              description: User Content ID
              schema:
                type: integer
              required: true
          responses:
            '200':
              $ref: '#/components/responses/delete'
            '404':
              $ref: '#/components/responses/not_found'
  /api/user_content/{id}/shares:
        get:
            operationId: R327
            summary: 'R317: Get User Content Shares'
            description: 'Get User Content Shares. Access: USR'
            tags:
                - 'M03: User Content'
            parameters:
                - in: path
                  name: id
                  description: User Content ID
                  schema:
                    type: integer
                  required: true
            responses:
                '200':
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/Share'
                '404':
                    $ref: '#/components/responses/not_found'
        put:
          operationId: R328
          summary: 'R318: Add User Content Share'
          description: 'Add User Content Share. Access: USR'
          tags:
            - 'M03: User Content'
          parameters:
            - in: path
              name: id
              description: User Content ID
              schema:
                type: integer
              required: true
          requestBody:
            required: true
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    post_id:
                      type: integer
                    id:
                      type: integer
                  required:
                    - post_id
                    - id
                  example:
                    post_id: 2
                    id: 5
          responses:
            '201':
              $ref: '#/components/responses/create'
            '404':
              $ref: '#/components/responses/not_found'
  /api/user_content/{id}/shares/{id_share}:
        delete:
            operationId: R329
            summary: 'R319: Delete User Content Share'
            description: 'Delete User Content Share. Access: OWN MOD ADM'
            tags:
                - 'M03: User Content'
            parameters:
                - in: path
                  name: id
                  description: User Content ID
                  schema:
                    type: integer
                  required: true
                - in: path
                  name: id_share
                  description: Share ID
                  schema:
                    type: integer
                  required: true
            responses:
                '200':
                    $ref: '#/components/responses/delete'
                '404':
                    $ref: '#/components/responses/not_found'
  /api/user_content/{id}/tags:
        get:
            operationId: R330
            summary: 'R320: Get User Content Tags'
            description: 'Get User Content Tags. Access: USR'
            tags:
                - 'M03: User Content'
            parameters:
                - in: path
                  name: id
                  description: User Content ID
                  schema:
                    type: integer
                  required: true
            responses:
                '200':
                    description: Success
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/Tag'
                '404':
                    $ref: '#/components/responses/not_found'
        put:
          operationId: R331
          summary: 'R321: Add User Content Tag'
          description: 'Add User Content Tag. Access: USR'
          tags:
            - 'M03: User Content'
          parameters:
            - in: path
              name: id
              description: User Content ID
              schema:
                type: integer
              required: true
          requestBody:
            required: true
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    content_id:
                      type: integer
                    user_id:
                      type: integer
                  required:
                    - content_id
                    - user_id
                  example:
                    content_id: 3
                    user_id: 8
          responses:
            '201':
              $ref: '#/components/responses/create'
            '404':
              $ref: '#/components/responses/not_found'
  /api/user_content/{id}/tags/{id_tag}:
    delete:
            operationId: R332
            summary: 'R322: Delete User Content Tag'
            description: 'Delete User Content Tag. Access: OWN ADM'
            tags:
                - 'M03: User Content'
            parameters:
                - in: path
                  name: id
                  description: User Content ID
                  schema:
                    type: integer
                  required: true
                - in: path
                  name: id_tag
                  description: Tag ID
                  schema:
                    type: integer
                  required: true
            responses:
                '200':
                    $ref: '#/components/responses/delete'
                '404':
                    $ref: '#/components/responses/not_found'

  /notifications/post:
    get:
      operationId: R401
      summary: 'R401: Post Notifications'
      description: 'Get Post Notifications. Access: OWN'
      tags:
        - 'M04: Notifications'
      parameters:
        - in: query
          name: id
          schema:
            type: integer
          description: Post ID
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  likes:
                    type: array
                    items:
                      $ref: '#/components/schemas/LikeNotifications'
                  comments:
                    type: array
                    items:
                      $ref: '#/components/schemas/CommentNotifications'
                  tags:
                    type: array
                    items:
                      $ref: '#/components/schemas/TagNotifications'
    delete:
      operationId: R402
      summary: 'R402: Delete Post Notifications'
      description: 'Delete Post Notifications. Access: OWN'
      tags:
        - 'M04: Notifications'
      parameters:
        - in: query
          name: id
          description: Post ID
          schema:
            type: integer
      responses:
        '200':
          description: 'Success'
        '404':
          description: 'Not Found!'
  /notifications/request:
    get:
      operationId: R403
      summary: 'R403: Get Request Notification'
      description: 'Provide request notifications such as Friend or Group Request Notifications'
      tags:
        - 'M04: Notifications'
      parameters:
        - in: query
          name: id
          schema:
            type: integer
          description: Request ID
      responses:
        '200':
          description: 'Success'
          content:
            application/json:
              schema:
                type: object
                properties:
                  friendRequest:
                    type: array
                    items:
                      $ref: '#/components/schemas/FriendRequestNotification'
                  groupRequest:
                    type: array
                    items:
                      $ref: '#/components/schemas/GroupRequestNotification'
    delete:
      operationId: R404
      summary: 'R404: Delete Request Notification'
      description: ' Delete Request Notifications such as Friend or Group Request Notifications'
      tags:
        - 'M04: Notifications'
      responses:
        '200':
          description: 'Success'
        '404':
          description: 'Not Found!'
  /notifications/invite:
    get:
      operationId: R405
      summary: 'R405: Get Invite Notifications'
      description: 'Get Invite Notifications from Groups'
      tags:
        - 'M04: Notifications'
      parameters:
        - in: query
          name: id
          schema:
            type: integer
          description: Request ID
      responses:
        '200':
          description: 'Success'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GroupInviteNotification'
    delete:
      operationId: R406
      summary: 'R406: Delete Invite Notifications'
      description: 'Delete Invite Notifications from Groups'
      responses:
        '200':
          description: 'Success'
        '404':
          description: 'Not Found!'

  /about:
    get:
      operationId: R501
      summary: 'R501: About Us Page'
      description: 'Provide About Us page. Access: PUB'
      tags:
        - 'M05: Administration and Static Pages'
      responses:
        '200':
          description: 'Ok. Show About Us page.'
  /contact:
    get:
      operationId: R502
      summary: 'R502: Contact Us Page'
      description: 'Provide Constact US page. Access: PUB'
      tags:
        - 'M05: Administration and Static Pages'
      responses:
        '200':
          description: 'Ok. Show Contact Us page.'
  /admin:
    get:
      operationId: R503
      summary: 'R503: Admin Dashboard'
      description: ' Provide Admin Dashboard. Access: ADM'
      tags:
        - 'M05: Administration and Static Pages'
      responses:
        '200':
          description: 'Ok. Show Admin Dashboard'

  /search:
    get:
      operationId: R601
      summary: 'Search'
      description: 'Access USR PUB'
      tags:
        - 'M06: Search'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                search:
                  type: string
      responses:
        200:
          description: 'Ok'
  /api/search/users:
    post:
      operationId: R602
      summary: 'Search for a user'
      description: 'Access USR PUB'
      tags:
        - 'M06: Search'
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                search:
                  type: string
      responses:
        200:
          description: 'Ok'





components:
  responses:
    create:
      description: Success
      content:
        text/plain:
          schema:
            type: string
          examples:
            201Success:
              description: Success adding content.
              value: Success
            201Failure:
              description: Failure adding content.
              value: Failure
    update:
      description: Success
      content:
        text/plain:
          schema:
            type: string
          examples:
            200Success:
              description: Success updating content.
              value: Success
            200Failure:
              description: Failure updating content.
              value: Failure
    delete:
      description: Success
      content:
        text/plain:
          schema:
            type: string
          examples:
            200Success:
              description: Success deleting.
              value: Success
            200Failure:
              description: Failure deleting.
              value: Failure
    'not_found':
      description: Not Found
  schemas:
    Privacy_Status:
      type: string
      enum: [Public, Private, Anonymous, Banned]
    Request_Status:
      type: string
      enum: [Accepted, Declined, Pending]

    Image:
      type: object
      properties:
        id:
          type: integer
        alt:
          type: string
        path:
          type: string
      required:
        - id
        - path
      example:
        - id: 1
          alt: Various fishes
          path: ./fishes.png
    User:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        birthdate:
          type: string
        email:
          type: string
        password:
          type: string
        admin_flag:
          type: boolean
        profile_pic:
          $ref: '#/components/schemas/Image'
        cover_pic:
          $ref: '#/components/schemas/Image'
        priv_stat:
          $ref: '#/components/schemas/Privacy_Status'
      required:
        - id
        - name
        - birthdate
        - email
        - priv_stat
      example:
        - id: 1
          name: Ada Lovelace
          birthdate: '1970-01-01'
          email: ada@lovelace.com
          priv_stat: Public

    Comment:
      type: object
      properties:
        id:
          type: integer
        creator:
          $ref: '#/components/schemas/User'
        text:
          type: string
        timestamp:
          type: string
        likes:
          type: integer
        replies:
          type: array
          items:
            $ref: '#/components/schemas/Comment'
      example:
        - id: 3
          creator:
            id: 1
            name: Ada Lovelace
            birthdate: '1970-01-01'
            email: ada@lovelace.com
            priv_stat: Public
          text: 'Lorem Ipsum'
          timestamp: '2021-12-15 10:35'
          likes: 7

    UserContent:
      type: object
      properties:
        id:
          type: integer
        creator_id:
          type: integer
        text:
          type: string
        timestamp:
          type: string
        images:
          type: array
          items:
            type: string
        comments:
          type: array
          items:
            $ref: '#/components/schemas/Comment'
        likes:
          type: integer

    Group:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        creation_date:
          type: string
        cover_pic:
          $ref: '#/components/schemas/Image'
        creator:
          $ref: '#/components/schemas/User'
        priv_stat:
          $ref: '#/components/schemas/Privacy_Status'
      required:
        - id
        - name
        - creation_date
        - creator
        - priv_stat

    Membership:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/User'
        group:
          $ref: '#/components/schemas/Group'
        moderator:
          type: boolean
      required:
        - user
        - group
        - moderator
      example:
        - moderator: true

    GroupRequest:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/User'
        group:
          $ref: '#/components/schemas/Group'
        status:
          $ref: '#/components/schemas/Request_Status'


    Friendship:
      type: object
      properties:
        user_1:
          $ref: '#/components/schemas/User'
        user_2:
          $ref: '#/components/schemas/User'
    LikeNotifications:
      type: object
      properties:
        id:
          type: integer
        "timestamp":
          type: string
        seen:
          type: boolean
        sender_id:
          type: integer
        content_id:
          type: integer
      example:
        id: 0
        "timestamp": '2021-12-10 12:03'
        seen: false
        sender_id: 1
        content_id: 3
    CommentNotifications:
      type: object
      properties:
        id:
          type: integer
        "timestamp":
          type: string
        seen:
          type: boolean
        comment_id:
          type: integer
      example:
        id: 0
        "timestamp": '2021-12-10 11:41'
        seen: false
        comment_id: 1

    Tag:
      type: object
      properties:
        id:
          type: integer
        user_id:
          type: integer
        content_id:
          type: integer

    TagNotifications:
      type: object
      properties:
        id:
          type: integer
        "timestamp":
          type: string
        seen:
          type: boolean
        content_id:
          type: integer
        target_id:
          type: integer
      example:
        id: 1
        "timestamp": '2021-12-10 12:05'
        seen: false
        content_id: 1
        target_id: 3

    Share:
      type: object
      properties:
        id:
          type: integer
        post_id:
          type: integer

    ShareNotification:
      type: object
      properties:
        id:
          type: integer
        "timestamp":
          type: string
        seen:
          type: boolean
        share_id:
          type: integer
      example:
        id: 1
        "timestamp": '2021-12-10 12:07'
        seen: true
        share_id: 2

    FriendRequestNotification:
      type: object
      properties:
        id:
          type: integer
        "timestamp":
          type: string
        seen:
          type: boolean
        sender_id:
          type: integer
        target_id:
          type: integer
      example:
        id: 1
        "timestamp": '2021-12-13 16:22'
        seen: false
        sender_id: 18
        target_id: 2

    GroupRequestNotification:
      type: object
      properties:
        id:
          type: integer
        "timestamp":
          type: string
        seen:
          type: boolean
        group_id:
          type: integer
        "user_id":
          type: integer
      example:
        id: 2
        "timestamp": '2021-12-13 16:26'
        seen: false
        group_id: 6
        "user_id": 3

    GroupInviteNotification:
      type: object
      properties:
        id:
          type: integer
        "timestamp":
          type: string
        seen:
          type: boolean
        group_id:
          type: integer
        "user_id":
          type: integer
      example:
        id: 1
        "timestamp": '2021-12-13 16:29'
        seen: false
        group_id: 3
        "user_id": 1
